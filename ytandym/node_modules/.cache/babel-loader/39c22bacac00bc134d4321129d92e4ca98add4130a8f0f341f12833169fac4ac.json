{"ast":null,"code":"import React,{useEffect}from'react';import AMapLoader from'@amap/amap-jsapi-loader';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){useEffect(()=>{var map,district,polygons=[];var citySelect=document.getElementById('city');var districtSelect=document.getElementById('district');var areaSelect=document.getElementById('street');window._AMapSecurityConfig={securityJsCode:\"2e803736ac0504da65adee814cc6d307\"};AMapLoader.load({key:'16745912922e513b08ec609abc01ed10',version:'1.4.15',plugins:['AMap.DistrictSearch','AMap.Polygon']}).then(AMap=>{map=new AMap.Map('container',{center:[116.30946,39.937629],zoom:3});var opts={subdistrict:1,showbiz:false};district=new AMap.DistrictSearch(opts);district.search('中国',function(status,result){if(status==='complete'){getData(result.districtList[0]);}});function getData(data,level){var bounds=data.boundaries;if(bounds){for(var i=0,l=bounds.length;i<l;i++){var polygon=new AMap.Polygon({map:map,strokeWeight:1,strokeColor:'#0091ea',fillColor:'#80d8ff',fillOpacity:0.2,path:bounds[i]});polygons.push(polygon);}map.setFitView();// 地图自适应\n}// 清空下一级别的下拉列表\nif(level==='province'){citySelect.innerHTML='';districtSelect.innerHTML='';areaSelect.innerHTML='';}else if(level==='city'){districtSelect.innerHTML='';areaSelect.innerHTML='';}else if(level==='district'){areaSelect.innerHTML='';}var subList=data.districtList;if(subList){var contentSub=new Option('--请选择--');var curlevel=subList[0].level;var curList=document.querySelector('#'+curlevel);curList.add(contentSub);for(var j=0,len=subList.length;j<len;j++){var name=subList[j].name;var levelSub=subList[j].level;// var cityCode = subList[j].citycode;\ncontentSub=new Option(name);contentSub.setAttribute(\"value\",levelSub);contentSub.center=subList[j].center;contentSub.adcode=subList[j].adcode;curList.add(contentSub);}}}window.search=function search(obj){// 清除地图上所有覆盖物\nfor(var i=0,l=polygons.length;i<l;i++){polygons[i].setMap(null);}var option=obj[obj.options.selectedIndex];// var keyword = option.text; // 关键字\nvar adcode=option.adcode;district.setLevel(option.value);// 行政区级别\ndistrict.setExtensions('all');// 行政区查询\n// 按照adcode进行查询可以保证数据返回的唯一性\ndistrict.search(adcode,function(status,result){if(status==='complete'){getData(result.districtList[0],obj.id);}});};window.setCenter=function setCenter(obj){map.setCenter(obj[obj.options.selectedIndex].center);};}).catch(e=>{console.error(e);});return()=>{// 清理代码\n};},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{id:\"container\",style:{width:'100%',height:'100vh'}}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-card\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"\\u4E0B\\u5C5E\\u884C\\u653F\\u533A\\u67E5\\u8BE2\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-item-prepend\",children:/*#__PURE__*/_jsx(\"span\",{className:\"input-item-text\",children:\"\\u7701\\u5E02\\u533A\"})}),/*#__PURE__*/_jsx(\"select\",{id:\"province\",style:{width:'100px'},onChange:e=>window.search(e.target)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-item-prepend\",children:/*#__PURE__*/_jsx(\"span\",{className:\"input-item-text\",children:\"\\u5730\\u7EA7\\u5E02\"})}),/*#__PURE__*/_jsx(\"select\",{id:\"city\",style:{width:'100px'},onChange:e=>window.search(e.target)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-item-prepend\",children:/*#__PURE__*/_jsx(\"span\",{className:\"input-item-text\",children:\"\\u533A\\u53BF\"})}),/*#__PURE__*/_jsx(\"select\",{id:\"district\",style:{width:'100px'},onChange:e=>window.search(e.target)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"input-item-prepend\",children:/*#__PURE__*/_jsx(\"span\",{className:\"input-item-text\",children:\"\\u8857\\u9053\"})}),/*#__PURE__*/_jsx(\"select\",{id:\"street\",style:{width:'100px'},onChange:e=>window.setCenter(e.target)})]})]})]});}export default App;","map":{"version":3,"names":["React","useEffect","AMapLoader","jsx","_jsx","jsxs","_jsxs","App","map","district","polygons","citySelect","document","getElementById","districtSelect","areaSelect","window","_AMapSecurityConfig","securityJsCode","load","key","version","plugins","then","AMap","Map","center","zoom","opts","subdistrict","showbiz","DistrictSearch","search","status","result","getData","districtList","data","level","bounds","boundaries","i","l","length","polygon","Polygon","strokeWeight","strokeColor","fillColor","fillOpacity","path","push","setFitView","innerHTML","subList","contentSub","Option","curlevel","curList","querySelector","add","j","len","name","levelSub","setAttribute","adcode","obj","setMap","option","options","selectedIndex","setLevel","value","setExtensions","id","setCenter","catch","e","console","error","children","style","width","height","className","onChange","target"],"sources":["/home/alan/YTandYM/ytandym/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport AMapLoader from '@amap/amap-jsapi-loader';\n\nfunction App() {\n  useEffect(() => {\n    var map, district, polygons = [];\n    var citySelect = document.getElementById('city');\n    var districtSelect = document.getElementById('district');\n    var areaSelect = document.getElementById('street');\n\n    window._AMapSecurityConfig = {\n      securityJsCode: \"2e803736ac0504da65adee814cc6d307\",\n    };\n\n    AMapLoader.load({\n      key: '16745912922e513b08ec609abc01ed10',\n      version: '1.4.15',\n      plugins: ['AMap.DistrictSearch', 'AMap.Polygon'],\n    }).then((AMap) => {\n      map = new AMap.Map('container', {\n        center: [116.30946, 39.937629],\n        zoom: 3\n      });\n\n      var opts = {\n        subdistrict: 1,\n        showbiz: false\n      };\n      district = new AMap.DistrictSearch(opts);\n      district.search('中国', function (status, result) {\n        if (status === 'complete') {\n          getData(result.districtList[0]);\n        }\n      });\n\n      function getData(data, level) {\n        var bounds = data.boundaries;\n        if (bounds) {\n          for (var i = 0, l = bounds.length; i < l; i++) {\n            var polygon = new AMap.Polygon({\n              map: map,\n              strokeWeight: 1,\n              strokeColor: '#0091ea',\n              fillColor: '#80d8ff',\n              fillOpacity: 0.2,\n              path: bounds[i]\n            });\n            polygons.push(polygon);\n          }\n          map.setFitView(); // 地图自适应\n        }\n\n        // 清空下一级别的下拉列表\n        if (level === 'province') {\n          citySelect.innerHTML = '';\n          districtSelect.innerHTML = '';\n          areaSelect.innerHTML = '';\n        } else if (level === 'city') {\n          districtSelect.innerHTML = '';\n          areaSelect.innerHTML = '';\n        } else if (level === 'district') {\n          areaSelect.innerHTML = '';\n        }\n\n        var subList = data.districtList;\n        if (subList) {\n          var contentSub = new Option('--请选择--');\n          var curlevel = subList[0].level;\n          var curList = document.querySelector('#' + curlevel);\n          curList.add(contentSub);\n          for (var j = 0, len = subList.length; j < len; j++) {\n            var name = subList[j].name;\n            var levelSub = subList[j].level;\n            // var cityCode = subList[j].citycode;\n            contentSub = new Option(name);\n            contentSub.setAttribute(\"value\", levelSub);\n            contentSub.center = subList[j].center;\n            contentSub.adcode = subList[j].adcode;\n            curList.add(contentSub);\n          }\n        }\n      }\n\n      window.search = function search(obj) {\n        // 清除地图上所有覆盖物\n        for (var i = 0, l = polygons.length; i < l; i++) {\n          polygons[i].setMap(null);\n        }\n        var option = obj[obj.options.selectedIndex];\n        // var keyword = option.text; // 关键字\n        var adcode = option.adcode;\n        district.setLevel(option.value); // 行政区级别\n        district.setExtensions('all');\n        // 行政区查询\n        // 按照adcode进行查询可以保证数据返回的唯一性\n        district.search(adcode, function (status, result) {\n          if (status === 'complete') {\n            getData(result.districtList[0], obj.id);\n          }\n        });\n      }\n\n      window.setCenter = function setCenter(obj) {\n        map.setCenter(obj[obj.options.selectedIndex].center);\n      }\n    }).catch(e => {\n      console.error(e);\n    });\n\n    return () => {\n      // 清理代码\n    };\n  }, []);\n\n  return (\n    <div>\n      <div id=\"container\" style={{ width: '100%', height: '100vh' }}></div>\n\n      <div className=\"input-card\">\n        <h4>下属行政区查询</h4>\n        <div className=\"input-item\">\n          <div className=\"input-item-prepend\"><span className=\"input-item-text\">省市区</span></div>\n          <select id='province' style={{ width: '100px' }} onChange={(e) => window.search(e.target)}></select>\n        </div>\n        <div className=\"input-item\">\n          <div className=\"input-item-prepend\"><span className=\"input-item-text\">地级市</span></div>\n          <select id='city' style={{ width: '100px' }} onChange={(e) => window.search(e.target)}></select>\n        </div>\n        <div className=\"input-item\">\n          <div className=\"input-item-prepend\"><span className=\"input-item-text\">区县</span></div>\n          <select id='district' style={{ width: '100px' }} onChange={(e) => window.search(e.target)}></select>\n        </div>\n        <div className=\"input-item\">\n          <div className=\"input-item-prepend\"><span className=\"input-item-text\">街道</span></div>\n          <select id='street' style={{ width: '100px' }} onChange={(e) => window.setCenter(e.target)}></select>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}